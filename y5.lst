pro name
Id
pro name
Id
pro name
Id
___
append
-q-d- 
,
append
-q-d-p- 
,
Base type
declare
pro name
Id
___

Symbol Table: global
Num Scope                Name           Ref            Type
  0 global               d              
  1 global               p              
  2 global               q              
  3 global               main           
     1: 
     2: p, d, q : int;
     3: 
     4: main :: {
     5:   [91mput[0m("> ")
        [91m**[0m ERROR: "syntax error" token: "put"
     6:   p = get(int)
     7:   while p > 1 {
     8:     put("factors of ")
     9:     put(p)
    10:     put(" are ")
    11:     d = 2
    12:     while d <= p / 2 {
    13:       q = p / d
    14:       if q * d == p {
    15:         put(d); put(" ")
    16:       }
    17:       d = d + 1
    18:     }
    19:     put("\n")
    20:     put("> ")
    21:     p = get(int)
    22:   }
    23: }

Symbol Table: global
Num Scope                Name           Ref            Type
  0 global               d              
  1 global               p              
  2 global               q              
  3 global               main           
Parse Unsuccessful
