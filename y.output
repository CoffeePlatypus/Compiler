Grammar

    0 $accept: Module $end

    1 Module: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: IdList ':' BaseType
    5     | IdList "::" Literal
    6     | IdList ':' FuncDecl
    7     | IdList "::" CodeBlock

    8 IdList: IdItem ',' IdList
    9       | IdItem

   10 IdItem: Id

   11 Id: IDENT_TOK

   12 BaseType: "int"
   13         | "chr"
   14         | "bool"
   15         | "void"

   16 Literal: INTLIT_TOK
   17        | CHRLIT_TOK
   18        | BOOLLIT_TOK

   19 FuncDecl: '(' ')' "->" BaseType

   20 CodeBlock: '{' StmtSeq '}'

   21 StmtSeq: Stmt StmtSeq
   22        | %empty

   23 Stmt: "put" '(' Expr ')'
   24     | AssignStmt
   25     | "if" Cond CodeBlock "else" CodeBlock
   26     | "while" Cond CodeBlock

   27 Cond: Expr CondOp Expr

   28 CondOp: '>'
   29       | '<'
   30       | ">="
   31       | "<="
   32       | "=="
   33       | "##"

   34 AssignStmt: Id '=' Expr

   35 Expr: Expr '+' Expr
   36     | Expr '-' Expr
   37     | Expr '*' Expr
   38     | Expr '/' Expr
   39     | '(' Expr ')'
   40     | '-' Expr
   41     | "get" '(' "int" ')'
   42     | Oprnd

   43 Oprnd: INTLIT_TOK
   44      | Id
   45      | CHRLIT_TOK
   46      | BOOLLIT_TOK


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19 23 39 41
')' (41) 19 23 39 41
'*' (42) 37
'+' (43) 35
',' (44) 8
'-' (45) 36 40
'/' (47) 38
':' (58) 4 6
'<' (60) 29
'=' (61) 34
'>' (62) 28
'{' (123) 20
'}' (125) 20
error (256)
IDENT_TOK (258) 11
"int" (259) 12 41
"chr" (260) 13
"bool" (261) 14
"void" (262) 15
"if" (263) 25
"else" (264) 25
"while" (265) 26
INTLIT_TOK (266) 16 43
CHRLIT_TOK (267) 17 45
BOOLLIT_TOK (268) 18 46
"->" (269) 19
"::" (270) 5 7
"put" (271) 23
"get" (272) 41
">=" (273) 30
"<=" (274) 31
"==" (275) 32
"##" (276) 33
UMINUS (277)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
Module (37)
    on left: 1, on right: 0
DeclList (38)
    on left: 2 3, on right: 1 2
Decl (39)
    on left: 4 5 6 7, on right: 2 3
IdList (40)
    on left: 8 9, on right: 4 5 6 7 8
IdItem (41)
    on left: 10, on right: 8 9
Id (42)
    on left: 11, on right: 10 34 44
BaseType (43)
    on left: 12 13 14 15, on right: 4 19
Literal (44)
    on left: 16 17 18, on right: 5
FuncDecl (45)
    on left: 19, on right: 6
CodeBlock (46)
    on left: 20, on right: 7 25 26
StmtSeq (47)
    on left: 21 22, on right: 20 21
Stmt (48)
    on left: 23 24 25 26, on right: 21
Cond (49)
    on left: 27, on right: 25 26
CondOp (50)
    on left: 28 29 30 31 32 33, on right: 27
AssignStmt (51)
    on left: 34, on right: 24
Expr (52)
    on left: 35 36 37 38 39 40 41 42, on right: 23 27 34 35 36 37 38
    39 40
Oprnd (53)
    on left: 43 44 45 46, on right: 42


State 0

    0 $accept: . Module $end

    IDENT_TOK  shift, and go to state 1

    Module    go to state 2
    DeclList  go to state 3
    Decl      go to state 4
    IdList    go to state 5
    IdItem    go to state 6
    Id        go to state 7


State 1

   11 Id: IDENT_TOK .

    $default  reduce using rule 11 (Id)


State 2

    0 $accept: Module . $end

    $end  shift, and go to state 8


State 3

    1 Module: DeclList .

    $default  reduce using rule 1 (Module)


State 4

    2 DeclList: Decl . DeclList
    3         | Decl .

    IDENT_TOK  shift, and go to state 1

    $default  reduce using rule 3 (DeclList)

    DeclList  go to state 9
    Decl      go to state 4
    IdList    go to state 5
    IdItem    go to state 6
    Id        go to state 7


State 5

    4 Decl: IdList . ':' BaseType
    5     | IdList . "::" Literal
    6     | IdList . ':' FuncDecl
    7     | IdList . "::" CodeBlock

    "::"  shift, and go to state 10
    ':'   shift, and go to state 11


State 6

    8 IdList: IdItem . ',' IdList
    9       | IdItem .

    ','  shift, and go to state 12

    $default  reduce using rule 9 (IdList)


State 7

   10 IdItem: Id .

    $default  reduce using rule 10 (IdItem)


State 8

    0 $accept: Module $end .

    $default  accept


State 9

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 10

    5 Decl: IdList "::" . Literal
    7     | IdList "::" . CodeBlock

    INTLIT_TOK   shift, and go to state 13
    CHRLIT_TOK   shift, and go to state 14
    BOOLLIT_TOK  shift, and go to state 15
    '{'          shift, and go to state 16

    Literal    go to state 17
    CodeBlock  go to state 18


State 11

    4 Decl: IdList ':' . BaseType
    6     | IdList ':' . FuncDecl

    "int"   shift, and go to state 19
    "chr"   shift, and go to state 20
    "bool"  shift, and go to state 21
    "void"  shift, and go to state 22
    '('     shift, and go to state 23

    BaseType  go to state 24
    FuncDecl  go to state 25


State 12

    8 IdList: IdItem ',' . IdList

    IDENT_TOK  shift, and go to state 1

    IdList  go to state 26
    IdItem  go to state 6
    Id      go to state 7


State 13

   16 Literal: INTLIT_TOK .

    $default  reduce using rule 16 (Literal)


State 14

   17 Literal: CHRLIT_TOK .

    $default  reduce using rule 17 (Literal)


State 15

   18 Literal: BOOLLIT_TOK .

    $default  reduce using rule 18 (Literal)


State 16

   20 CodeBlock: '{' . StmtSeq '}'

    IDENT_TOK  shift, and go to state 1
    "if"       shift, and go to state 27
    "while"    shift, and go to state 28
    "put"      shift, and go to state 29

    $default  reduce using rule 22 (StmtSeq)

    Id          go to state 30
    StmtSeq     go to state 31
    Stmt        go to state 32
    AssignStmt  go to state 33


State 17

    5 Decl: IdList "::" Literal .

    $default  reduce using rule 5 (Decl)


State 18

    7 Decl: IdList "::" CodeBlock .

    $default  reduce using rule 7 (Decl)


State 19

   12 BaseType: "int" .

    $default  reduce using rule 12 (BaseType)


State 20

   13 BaseType: "chr" .

    $default  reduce using rule 13 (BaseType)


State 21

   14 BaseType: "bool" .

    $default  reduce using rule 14 (BaseType)


State 22

   15 BaseType: "void" .

    $default  reduce using rule 15 (BaseType)


State 23

   19 FuncDecl: '(' . ')' "->" BaseType

    ')'  shift, and go to state 34


State 24

    4 Decl: IdList ':' BaseType .

    $default  reduce using rule 4 (Decl)


State 25

    6 Decl: IdList ':' FuncDecl .

    $default  reduce using rule 6 (Decl)


State 26

    8 IdList: IdItem ',' IdList .

    $default  reduce using rule 8 (IdList)


State 27

   25 Stmt: "if" . Cond CodeBlock "else" CodeBlock

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Cond   go to state 42
    Expr   go to state 43
    Oprnd  go to state 44


State 28

   26 Stmt: "while" . Cond CodeBlock

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Cond   go to state 45
    Expr   go to state 43
    Oprnd  go to state 44


State 29

   23 Stmt: "put" . '(' Expr ')'

    '('  shift, and go to state 46


State 30

   34 AssignStmt: Id . '=' Expr

    '='  shift, and go to state 47


State 31

   20 CodeBlock: '{' StmtSeq . '}'

    '}'  shift, and go to state 48


State 32

   21 StmtSeq: Stmt . StmtSeq

    IDENT_TOK  shift, and go to state 1
    "if"       shift, and go to state 27
    "while"    shift, and go to state 28
    "put"      shift, and go to state 29

    $default  reduce using rule 22 (StmtSeq)

    Id          go to state 30
    StmtSeq     go to state 49
    Stmt        go to state 32
    AssignStmt  go to state 33


State 33

   24 Stmt: AssignStmt .

    $default  reduce using rule 24 (Stmt)


State 34

   19 FuncDecl: '(' ')' . "->" BaseType

    "->"  shift, and go to state 50


State 35

   43 Oprnd: INTLIT_TOK .

    $default  reduce using rule 43 (Oprnd)


State 36

   45 Oprnd: CHRLIT_TOK .

    $default  reduce using rule 45 (Oprnd)


State 37

   46 Oprnd: BOOLLIT_TOK .

    $default  reduce using rule 46 (Oprnd)


State 38

   41 Expr: "get" . '(' "int" ')'

    '('  shift, and go to state 51


State 39

   40 Expr: '-' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 52
    Oprnd  go to state 44


State 40

   39 Expr: '(' . Expr ')'

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 53
    Oprnd  go to state 44


State 41

   44 Oprnd: Id .

    $default  reduce using rule 44 (Oprnd)


State 42

   25 Stmt: "if" Cond . CodeBlock "else" CodeBlock

    '{'  shift, and go to state 16

    CodeBlock  go to state 54


State 43

   27 Cond: Expr . CondOp Expr
   35 Expr: Expr . '+' Expr
   36     | Expr . '-' Expr
   37     | Expr . '*' Expr
   38     | Expr . '/' Expr

    ">="  shift, and go to state 55
    "<="  shift, and go to state 56
    "=="  shift, and go to state 57
    "##"  shift, and go to state 58
    '+'   shift, and go to state 59
    '-'   shift, and go to state 60
    '*'   shift, and go to state 61
    '/'   shift, and go to state 62
    '>'   shift, and go to state 63
    '<'   shift, and go to state 64

    CondOp  go to state 65


State 44

   42 Expr: Oprnd .

    $default  reduce using rule 42 (Expr)


State 45

   26 Stmt: "while" Cond . CodeBlock

    '{'  shift, and go to state 16

    CodeBlock  go to state 66


State 46

   23 Stmt: "put" '(' . Expr ')'

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 67
    Oprnd  go to state 44


State 47

   34 AssignStmt: Id '=' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 68
    Oprnd  go to state 44


State 48

   20 CodeBlock: '{' StmtSeq '}' .

    $default  reduce using rule 20 (CodeBlock)


State 49

   21 StmtSeq: Stmt StmtSeq .

    $default  reduce using rule 21 (StmtSeq)


State 50

   19 FuncDecl: '(' ')' "->" . BaseType

    "int"   shift, and go to state 19
    "chr"   shift, and go to state 20
    "bool"  shift, and go to state 21
    "void"  shift, and go to state 22

    BaseType  go to state 69


State 51

   41 Expr: "get" '(' . "int" ')'

    "int"  shift, and go to state 70


State 52

   35 Expr: Expr . '+' Expr
   36     | Expr . '-' Expr
   37     | Expr . '*' Expr
   38     | Expr . '/' Expr
   40     | '-' Expr .

    $default  reduce using rule 40 (Expr)


State 53

   35 Expr: Expr . '+' Expr
   36     | Expr . '-' Expr
   37     | Expr . '*' Expr
   38     | Expr . '/' Expr
   39     | '(' Expr . ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    ')'  shift, and go to state 71


State 54

   25 Stmt: "if" Cond CodeBlock . "else" CodeBlock

    "else"  shift, and go to state 72


State 55

   30 CondOp: ">=" .

    $default  reduce using rule 30 (CondOp)


State 56

   31 CondOp: "<=" .

    $default  reduce using rule 31 (CondOp)


State 57

   32 CondOp: "==" .

    $default  reduce using rule 32 (CondOp)


State 58

   33 CondOp: "##" .

    $default  reduce using rule 33 (CondOp)


State 59

   35 Expr: Expr '+' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 73
    Oprnd  go to state 44


State 60

   36 Expr: Expr '-' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 74
    Oprnd  go to state 44


State 61

   37 Expr: Expr '*' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 75
    Oprnd  go to state 44


State 62

   38 Expr: Expr '/' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 76
    Oprnd  go to state 44


State 63

   28 CondOp: '>' .

    $default  reduce using rule 28 (CondOp)


State 64

   29 CondOp: '<' .

    $default  reduce using rule 29 (CondOp)


State 65

   27 Cond: Expr CondOp . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 77
    Oprnd  go to state 44


State 66

   26 Stmt: "while" Cond CodeBlock .

    $default  reduce using rule 26 (Stmt)


State 67

   23 Stmt: "put" '(' Expr . ')'
   35 Expr: Expr . '+' Expr
   36     | Expr . '-' Expr
   37     | Expr . '*' Expr
   38     | Expr . '/' Expr

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    ')'  shift, and go to state 78


State 68

   34 AssignStmt: Id '=' Expr .
   35 Expr: Expr . '+' Expr
   36     | Expr . '-' Expr
   37     | Expr . '*' Expr
   38     | Expr . '/' Expr

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62

    $default  reduce using rule 34 (AssignStmt)


State 69

   19 FuncDecl: '(' ')' "->" BaseType .

    $default  reduce using rule 19 (FuncDecl)


State 70

   41 Expr: "get" '(' "int" . ')'

    ')'  shift, and go to state 79


State 71

   39 Expr: '(' Expr ')' .

    $default  reduce using rule 39 (Expr)


State 72

   25 Stmt: "if" Cond CodeBlock "else" . CodeBlock

    '{'  shift, and go to state 16

    CodeBlock  go to state 80


State 73

   35 Expr: Expr . '+' Expr
   35     | Expr '+' Expr .
   36     | Expr . '-' Expr
   37     | Expr . '*' Expr
   38     | Expr . '/' Expr

    '*'  shift, and go to state 61
    '/'  shift, and go to state 62

    $default  reduce using rule 35 (Expr)


State 74

   35 Expr: Expr . '+' Expr
   36     | Expr . '-' Expr
   36     | Expr '-' Expr .
   37     | Expr . '*' Expr
   38     | Expr . '/' Expr

    '*'  shift, and go to state 61
    '/'  shift, and go to state 62

    $default  reduce using rule 36 (Expr)


State 75

   35 Expr: Expr . '+' Expr
   36     | Expr . '-' Expr
   37     | Expr . '*' Expr
   37     | Expr '*' Expr .
   38     | Expr . '/' Expr

    $default  reduce using rule 37 (Expr)


State 76

   35 Expr: Expr . '+' Expr
   36     | Expr . '-' Expr
   37     | Expr . '*' Expr
   38     | Expr . '/' Expr
   38     | Expr '/' Expr .

    $default  reduce using rule 38 (Expr)


State 77

   27 Cond: Expr CondOp Expr .
   35 Expr: Expr . '+' Expr
   36     | Expr . '-' Expr
   37     | Expr . '*' Expr
   38     | Expr . '/' Expr

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62

    $default  reduce using rule 27 (Cond)


State 78

   23 Stmt: "put" '(' Expr ')' .

    $default  reduce using rule 23 (Stmt)


State 79

   41 Expr: "get" '(' "int" ')' .

    $default  reduce using rule 41 (Expr)


State 80

   25 Stmt: "if" Cond CodeBlock "else" CodeBlock .

    $default  reduce using rule 25 (Stmt)
