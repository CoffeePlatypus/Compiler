Grammar

    0 $accept: Module $end

    1 Module: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: IdList ':' BaseType
    5     | IdList "::" Literal
    6     | IdList ':' FuncDecl
    7     | IdList "::" CodeBlock

    8 IdList: IdItem ',' IdList
    9       | IdItem

   10 IdItem: Id

   11 Id: IDENT_TOK

   12 BaseType: "int"
   13         | "chr"
   14         | "bool"
   15         | "void"

   16 Literal: INTLIT_TOK
   17        | CHRLIT_TOK
   18        | BOOLLIT_TOK

   19 FuncDecl: '(' ')' "->" BaseType

   20 CodeBlock: '{' StmtSeq '}'

   21 StmtSeq: Stmt StmtSeq
   22        | %empty

   23 Stmt: "put" '(' Literal ')'
   24     | AssignStmt

   25 AssignStmt: Id '=' Expr

   26 Expr: Expr '+' Expr
   27     | Expr '-' Expr
   28     | Expr '*' Expr
   29     | Expr '/' Expr
   30     | '(' Expr ')'
   31     | '-' Expr
   32     | "get" '(' "int" ')'
   33     | Oprnd

   34 Oprnd: INTLIT_TOK
   35      | IDENT_TOK


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19 23 30 32
')' (41) 19 23 30 32
'*' (42) 28
'+' (43) 26
',' (44) 8
'-' (45) 27 31
'/' (47) 29
':' (58) 4 6
'=' (61) 25
'{' (123) 20
'}' (125) 20
error (256)
IDENT_TOK (258) 11 35
"int" (259) 12 32
"chr" (260) 13
"bool" (261) 14
"void" (262) 15
INTLIT_TOK (263) 16 34
CHRLIT_TOK (264) 17
BOOLLIT_TOK (265) 18
"->" (266) 19
"::" (267) 5 7
"put" (268) 23
"get" (269) 32
UMINUS (270)


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
Module (28)
    on left: 1, on right: 0
DeclList (29)
    on left: 2 3, on right: 1 2
Decl (30)
    on left: 4 5 6 7, on right: 2 3
IdList (31)
    on left: 8 9, on right: 4 5 6 7 8
IdItem (32)
    on left: 10, on right: 8 9
Id (33)
    on left: 11, on right: 10 25
BaseType (34)
    on left: 12 13 14 15, on right: 4 19
Literal (35)
    on left: 16 17 18, on right: 5 23
FuncDecl (36)
    on left: 19, on right: 6
CodeBlock (37)
    on left: 20, on right: 7
StmtSeq (38)
    on left: 21 22, on right: 20 21
Stmt (39)
    on left: 23 24, on right: 21
AssignStmt (40)
    on left: 25, on right: 24
Expr (41)
    on left: 26 27 28 29 30 31 32 33, on right: 25 26 27 28 29 30 31
Oprnd (42)
    on left: 34 35, on right: 33


State 0

    0 $accept: . Module $end

    IDENT_TOK  shift, and go to state 1

    Module    go to state 2
    DeclList  go to state 3
    Decl      go to state 4
    IdList    go to state 5
    IdItem    go to state 6
    Id        go to state 7


State 1

   11 Id: IDENT_TOK .

    $default  reduce using rule 11 (Id)


State 2

    0 $accept: Module . $end

    $end  shift, and go to state 8


State 3

    1 Module: DeclList .

    $default  reduce using rule 1 (Module)


State 4

    2 DeclList: Decl . DeclList
    3         | Decl .

    IDENT_TOK  shift, and go to state 1

    $default  reduce using rule 3 (DeclList)

    DeclList  go to state 9
    Decl      go to state 4
    IdList    go to state 5
    IdItem    go to state 6
    Id        go to state 7


State 5

    4 Decl: IdList . ':' BaseType
    5     | IdList . "::" Literal
    6     | IdList . ':' FuncDecl
    7     | IdList . "::" CodeBlock

    "::"  shift, and go to state 10
    ':'   shift, and go to state 11


State 6

    8 IdList: IdItem . ',' IdList
    9       | IdItem .

    ','  shift, and go to state 12

    $default  reduce using rule 9 (IdList)


State 7

   10 IdItem: Id .

    $default  reduce using rule 10 (IdItem)


State 8

    0 $accept: Module $end .

    $default  accept


State 9

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 10

    5 Decl: IdList "::" . Literal
    7     | IdList "::" . CodeBlock

    INTLIT_TOK   shift, and go to state 13
    CHRLIT_TOK   shift, and go to state 14
    BOOLLIT_TOK  shift, and go to state 15
    '{'          shift, and go to state 16

    Literal    go to state 17
    CodeBlock  go to state 18


State 11

    4 Decl: IdList ':' . BaseType
    6     | IdList ':' . FuncDecl

    "int"   shift, and go to state 19
    "chr"   shift, and go to state 20
    "bool"  shift, and go to state 21
    "void"  shift, and go to state 22
    '('     shift, and go to state 23

    BaseType  go to state 24
    FuncDecl  go to state 25


State 12

    8 IdList: IdItem ',' . IdList

    IDENT_TOK  shift, and go to state 1

    IdList  go to state 26
    IdItem  go to state 6
    Id      go to state 7


State 13

   16 Literal: INTLIT_TOK .

    $default  reduce using rule 16 (Literal)


State 14

   17 Literal: CHRLIT_TOK .

    $default  reduce using rule 17 (Literal)


State 15

   18 Literal: BOOLLIT_TOK .

    $default  reduce using rule 18 (Literal)


State 16

   20 CodeBlock: '{' . StmtSeq '}'

    IDENT_TOK  shift, and go to state 1
    "put"      shift, and go to state 27

    $default  reduce using rule 22 (StmtSeq)

    Id          go to state 28
    StmtSeq     go to state 29
    Stmt        go to state 30
    AssignStmt  go to state 31


State 17

    5 Decl: IdList "::" Literal .

    $default  reduce using rule 5 (Decl)


State 18

    7 Decl: IdList "::" CodeBlock .

    $default  reduce using rule 7 (Decl)


State 19

   12 BaseType: "int" .

    $default  reduce using rule 12 (BaseType)


State 20

   13 BaseType: "chr" .

    $default  reduce using rule 13 (BaseType)


State 21

   14 BaseType: "bool" .

    $default  reduce using rule 14 (BaseType)


State 22

   15 BaseType: "void" .

    $default  reduce using rule 15 (BaseType)


State 23

   19 FuncDecl: '(' . ')' "->" BaseType

    ')'  shift, and go to state 32


State 24

    4 Decl: IdList ':' BaseType .

    $default  reduce using rule 4 (Decl)


State 25

    6 Decl: IdList ':' FuncDecl .

    $default  reduce using rule 6 (Decl)


State 26

    8 IdList: IdItem ',' IdList .

    $default  reduce using rule 8 (IdList)


State 27

   23 Stmt: "put" . '(' Literal ')'

    '('  shift, and go to state 33


State 28

   25 AssignStmt: Id . '=' Expr

    '='  shift, and go to state 34


State 29

   20 CodeBlock: '{' StmtSeq . '}'

    '}'  shift, and go to state 35


State 30

   21 StmtSeq: Stmt . StmtSeq

    IDENT_TOK  shift, and go to state 1
    "put"      shift, and go to state 27

    $default  reduce using rule 22 (StmtSeq)

    Id          go to state 28
    StmtSeq     go to state 36
    Stmt        go to state 30
    AssignStmt  go to state 31


State 31

   24 Stmt: AssignStmt .

    $default  reduce using rule 24 (Stmt)


State 32

   19 FuncDecl: '(' ')' . "->" BaseType

    "->"  shift, and go to state 37


State 33

   23 Stmt: "put" '(' . Literal ')'

    INTLIT_TOK   shift, and go to state 13
    CHRLIT_TOK   shift, and go to state 14
    BOOLLIT_TOK  shift, and go to state 15

    Literal  go to state 38


State 34

   25 AssignStmt: Id '=' . Expr

    IDENT_TOK   shift, and go to state 39
    INTLIT_TOK  shift, and go to state 40
    "get"       shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr   go to state 44
    Oprnd  go to state 45


State 35

   20 CodeBlock: '{' StmtSeq '}' .

    $default  reduce using rule 20 (CodeBlock)


State 36

   21 StmtSeq: Stmt StmtSeq .

    $default  reduce using rule 21 (StmtSeq)


State 37

   19 FuncDecl: '(' ')' "->" . BaseType

    "int"   shift, and go to state 19
    "chr"   shift, and go to state 20
    "bool"  shift, and go to state 21
    "void"  shift, and go to state 22

    BaseType  go to state 46


State 38

   23 Stmt: "put" '(' Literal . ')'

    ')'  shift, and go to state 47


State 39

   35 Oprnd: IDENT_TOK .

    $default  reduce using rule 35 (Oprnd)


State 40

   34 Oprnd: INTLIT_TOK .

    $default  reduce using rule 34 (Oprnd)


State 41

   32 Expr: "get" . '(' "int" ')'

    '('  shift, and go to state 48


State 42

   31 Expr: '-' . Expr

    IDENT_TOK   shift, and go to state 39
    INTLIT_TOK  shift, and go to state 40
    "get"       shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr   go to state 49
    Oprnd  go to state 45


State 43

   30 Expr: '(' . Expr ')'

    IDENT_TOK   shift, and go to state 39
    INTLIT_TOK  shift, and go to state 40
    "get"       shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr   go to state 50
    Oprnd  go to state 45


State 44

   25 AssignStmt: Id '=' Expr .
   26 Expr: Expr . '+' Expr
   27     | Expr . '-' Expr
   28     | Expr . '*' Expr
   29     | Expr . '/' Expr

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 25 (AssignStmt)


State 45

   33 Expr: Oprnd .

    $default  reduce using rule 33 (Expr)


State 46

   19 FuncDecl: '(' ')' "->" BaseType .

    $default  reduce using rule 19 (FuncDecl)


State 47

   23 Stmt: "put" '(' Literal ')' .

    $default  reduce using rule 23 (Stmt)


State 48

   32 Expr: "get" '(' . "int" ')'

    "int"  shift, and go to state 55


State 49

   26 Expr: Expr . '+' Expr
   27     | Expr . '-' Expr
   28     | Expr . '*' Expr
   29     | Expr . '/' Expr
   31     | '-' Expr .

    $default  reduce using rule 31 (Expr)


State 50

   26 Expr: Expr . '+' Expr
   27     | Expr . '-' Expr
   28     | Expr . '*' Expr
   29     | Expr . '/' Expr
   30     | '(' Expr . ')'

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ')'  shift, and go to state 56


State 51

   26 Expr: Expr '+' . Expr

    IDENT_TOK   shift, and go to state 39
    INTLIT_TOK  shift, and go to state 40
    "get"       shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr   go to state 57
    Oprnd  go to state 45


State 52

   27 Expr: Expr '-' . Expr

    IDENT_TOK   shift, and go to state 39
    INTLIT_TOK  shift, and go to state 40
    "get"       shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr   go to state 58
    Oprnd  go to state 45


State 53

   28 Expr: Expr '*' . Expr

    IDENT_TOK   shift, and go to state 39
    INTLIT_TOK  shift, and go to state 40
    "get"       shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr   go to state 59
    Oprnd  go to state 45


State 54

   29 Expr: Expr '/' . Expr

    IDENT_TOK   shift, and go to state 39
    INTLIT_TOK  shift, and go to state 40
    "get"       shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr   go to state 60
    Oprnd  go to state 45


State 55

   32 Expr: "get" '(' "int" . ')'

    ')'  shift, and go to state 61


State 56

   30 Expr: '(' Expr ')' .

    $default  reduce using rule 30 (Expr)


State 57

   26 Expr: Expr . '+' Expr
   26     | Expr '+' Expr .
   27     | Expr . '-' Expr
   28     | Expr . '*' Expr
   29     | Expr . '/' Expr

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 26 (Expr)


State 58

   26 Expr: Expr . '+' Expr
   27     | Expr . '-' Expr
   27     | Expr '-' Expr .
   28     | Expr . '*' Expr
   29     | Expr . '/' Expr

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 27 (Expr)


State 59

   26 Expr: Expr . '+' Expr
   27     | Expr . '-' Expr
   28     | Expr . '*' Expr
   28     | Expr '*' Expr .
   29     | Expr . '/' Expr

    $default  reduce using rule 28 (Expr)


State 60

   26 Expr: Expr . '+' Expr
   27     | Expr . '-' Expr
   28     | Expr . '*' Expr
   29     | Expr . '/' Expr
   29     | Expr '/' Expr .

    $default  reduce using rule 29 (Expr)


State 61

   32 Expr: "get" '(' "int" ')' .

    $default  reduce using rule 32 (Expr)
