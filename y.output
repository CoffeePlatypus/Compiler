Grammar

    0 $accept: Module $end

    1 Module: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: IdList ':' BaseType
    5     | IdList "::" Literal
    6     | IdList ':' FuncDecl
    7     | IdList "::" CodeBlock

    8 IdList: IdItem ',' IdList
    9       | IdItem

   10 IdItem: Id

   11 Id: IDENT_TOK

   12 String: "string"

   13 BaseType: "int"
   14         | "chr"
   15         | "bool"
   16         | "void"

   17 Literal: INTLIT_TOK
   18        | CHRLIT_TOK
   19        | BOOLLIT_TOK

   20 FuncDecl: '(' ')' "->" BaseType

   21 CodeBlock: '{' StmtSeq '}'

   22 StmtSeq: Stmt StmtSeq
   23        | %empty

   24 Stmt: "put" '(' Expr ')'
   25     | "put" '(' String ')'
   26     | AssignStmt
   27     | "if" Cond CodeBlock
   28     | "if" Cond CodeBlock "else" CodeBlock
   29     | "while" Cond CodeBlock
   30     | Id '(' ')'

   31 Cond: Expr CondOp Expr

   32 CondOp: '>'
   33       | '<'
   34       | ">="
   35       | "<="
   36       | "=="
   37       | "##"

   38 AssignStmt: Id '=' Expr

   39 Expr: Expr '+' Expr
   40     | Expr '-' Expr
   41     | Expr '*' Expr
   42     | Expr '/' Expr
   43     | '(' Expr ')'
   44     | '-' Expr
   45     | "get" '(' "int" ')'
   46     | Oprnd

   47 Oprnd: INTLIT_TOK
   48      | Id
   49      | CHRLIT_TOK
   50      | BOOLLIT_TOK


Terminals, with rules where they appear

$end (0) 0
'(' (40) 20 24 25 30 43 45
')' (41) 20 24 25 30 43 45
'*' (42) 41
'+' (43) 39
',' (44) 8
'-' (45) 40 44
'/' (47) 42
':' (58) 4 6
'<' (60) 33
'=' (61) 38
'>' (62) 32
'{' (123) 21
'}' (125) 21
error (256)
IDENT_TOK (258) 11
"int" (259) 13 45
"chr" (260) 14
"bool" (261) 15
"void" (262) 16
"if" (263) 27 28
"else" (264) 28
"while" (265) 29
"string" (266) 12
INTLIT_TOK (267) 17 47
CHRLIT_TOK (268) 18 49
BOOLLIT_TOK (269) 19 50
"->" (270) 20
"::" (271) 5 7
"put" (272) 24 25
"get" (273) 45
">=" (274) 34
"<=" (275) 35
"==" (276) 36
"##" (277) 37
UMINUS (278)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
Module (38)
    on left: 1, on right: 0
DeclList (39)
    on left: 2 3, on right: 1 2
Decl (40)
    on left: 4 5 6 7, on right: 2 3
IdList (41)
    on left: 8 9, on right: 4 5 6 7 8
IdItem (42)
    on left: 10, on right: 8 9
Id (43)
    on left: 11, on right: 10 30 38 48
String (44)
    on left: 12, on right: 25
BaseType (45)
    on left: 13 14 15 16, on right: 4 20
Literal (46)
    on left: 17 18 19, on right: 5
FuncDecl (47)
    on left: 20, on right: 6
CodeBlock (48)
    on left: 21, on right: 7 27 28 29
StmtSeq (49)
    on left: 22 23, on right: 21 22
Stmt (50)
    on left: 24 25 26 27 28 29 30, on right: 22
Cond (51)
    on left: 31, on right: 27 28 29
CondOp (52)
    on left: 32 33 34 35 36 37, on right: 31
AssignStmt (53)
    on left: 38, on right: 26
Expr (54)
    on left: 39 40 41 42 43 44 45 46, on right: 24 31 38 39 40 41 42
    43 44
Oprnd (55)
    on left: 47 48 49 50, on right: 46


State 0

    0 $accept: . Module $end

    IDENT_TOK  shift, and go to state 1

    Module    go to state 2
    DeclList  go to state 3
    Decl      go to state 4
    IdList    go to state 5
    IdItem    go to state 6
    Id        go to state 7


State 1

   11 Id: IDENT_TOK .

    $default  reduce using rule 11 (Id)


State 2

    0 $accept: Module . $end

    $end  shift, and go to state 8


State 3

    1 Module: DeclList .

    $default  reduce using rule 1 (Module)


State 4

    2 DeclList: Decl . DeclList
    3         | Decl .

    IDENT_TOK  shift, and go to state 1

    $default  reduce using rule 3 (DeclList)

    DeclList  go to state 9
    Decl      go to state 4
    IdList    go to state 5
    IdItem    go to state 6
    Id        go to state 7


State 5

    4 Decl: IdList . ':' BaseType
    5     | IdList . "::" Literal
    6     | IdList . ':' FuncDecl
    7     | IdList . "::" CodeBlock

    "::"  shift, and go to state 10
    ':'   shift, and go to state 11


State 6

    8 IdList: IdItem . ',' IdList
    9       | IdItem .

    ','  shift, and go to state 12

    $default  reduce using rule 9 (IdList)


State 7

   10 IdItem: Id .

    $default  reduce using rule 10 (IdItem)


State 8

    0 $accept: Module $end .

    $default  accept


State 9

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 10

    5 Decl: IdList "::" . Literal
    7     | IdList "::" . CodeBlock

    INTLIT_TOK   shift, and go to state 13
    CHRLIT_TOK   shift, and go to state 14
    BOOLLIT_TOK  shift, and go to state 15
    '{'          shift, and go to state 16

    Literal    go to state 17
    CodeBlock  go to state 18


State 11

    4 Decl: IdList ':' . BaseType
    6     | IdList ':' . FuncDecl

    "int"   shift, and go to state 19
    "chr"   shift, and go to state 20
    "bool"  shift, and go to state 21
    "void"  shift, and go to state 22
    '('     shift, and go to state 23

    BaseType  go to state 24
    FuncDecl  go to state 25


State 12

    8 IdList: IdItem ',' . IdList

    IDENT_TOK  shift, and go to state 1

    IdList  go to state 26
    IdItem  go to state 6
    Id      go to state 7


State 13

   17 Literal: INTLIT_TOK .

    $default  reduce using rule 17 (Literal)


State 14

   18 Literal: CHRLIT_TOK .

    $default  reduce using rule 18 (Literal)


State 15

   19 Literal: BOOLLIT_TOK .

    $default  reduce using rule 19 (Literal)


State 16

   21 CodeBlock: '{' . StmtSeq '}'

    IDENT_TOK  shift, and go to state 1
    "if"       shift, and go to state 27
    "while"    shift, and go to state 28
    "put"      shift, and go to state 29

    $default  reduce using rule 23 (StmtSeq)

    Id          go to state 30
    StmtSeq     go to state 31
    Stmt        go to state 32
    AssignStmt  go to state 33


State 17

    5 Decl: IdList "::" Literal .

    $default  reduce using rule 5 (Decl)


State 18

    7 Decl: IdList "::" CodeBlock .

    $default  reduce using rule 7 (Decl)


State 19

   13 BaseType: "int" .

    $default  reduce using rule 13 (BaseType)


State 20

   14 BaseType: "chr" .

    $default  reduce using rule 14 (BaseType)


State 21

   15 BaseType: "bool" .

    $default  reduce using rule 15 (BaseType)


State 22

   16 BaseType: "void" .

    $default  reduce using rule 16 (BaseType)


State 23

   20 FuncDecl: '(' . ')' "->" BaseType

    ')'  shift, and go to state 34


State 24

    4 Decl: IdList ':' BaseType .

    $default  reduce using rule 4 (Decl)


State 25

    6 Decl: IdList ':' FuncDecl .

    $default  reduce using rule 6 (Decl)


State 26

    8 IdList: IdItem ',' IdList .

    $default  reduce using rule 8 (IdList)


State 27

   27 Stmt: "if" . Cond CodeBlock
   28     | "if" . Cond CodeBlock "else" CodeBlock

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Cond   go to state 42
    Expr   go to state 43
    Oprnd  go to state 44


State 28

   29 Stmt: "while" . Cond CodeBlock

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Cond   go to state 45
    Expr   go to state 43
    Oprnd  go to state 44


State 29

   24 Stmt: "put" . '(' Expr ')'
   25     | "put" . '(' String ')'

    '('  shift, and go to state 46


State 30

   30 Stmt: Id . '(' ')'
   38 AssignStmt: Id . '=' Expr

    '('  shift, and go to state 47
    '='  shift, and go to state 48


State 31

   21 CodeBlock: '{' StmtSeq . '}'

    '}'  shift, and go to state 49


State 32

   22 StmtSeq: Stmt . StmtSeq

    IDENT_TOK  shift, and go to state 1
    "if"       shift, and go to state 27
    "while"    shift, and go to state 28
    "put"      shift, and go to state 29

    $default  reduce using rule 23 (StmtSeq)

    Id          go to state 30
    StmtSeq     go to state 50
    Stmt        go to state 32
    AssignStmt  go to state 33


State 33

   26 Stmt: AssignStmt .

    $default  reduce using rule 26 (Stmt)


State 34

   20 FuncDecl: '(' ')' . "->" BaseType

    "->"  shift, and go to state 51


State 35

   47 Oprnd: INTLIT_TOK .

    $default  reduce using rule 47 (Oprnd)


State 36

   49 Oprnd: CHRLIT_TOK .

    $default  reduce using rule 49 (Oprnd)


State 37

   50 Oprnd: BOOLLIT_TOK .

    $default  reduce using rule 50 (Oprnd)


State 38

   45 Expr: "get" . '(' "int" ')'

    '('  shift, and go to state 52


State 39

   44 Expr: '-' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 53
    Oprnd  go to state 44


State 40

   43 Expr: '(' . Expr ')'

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 54
    Oprnd  go to state 44


State 41

   48 Oprnd: Id .

    $default  reduce using rule 48 (Oprnd)


State 42

   27 Stmt: "if" Cond . CodeBlock
   28     | "if" Cond . CodeBlock "else" CodeBlock

    '{'  shift, and go to state 16

    CodeBlock  go to state 55


State 43

   31 Cond: Expr . CondOp Expr
   39 Expr: Expr . '+' Expr
   40     | Expr . '-' Expr
   41     | Expr . '*' Expr
   42     | Expr . '/' Expr

    ">="  shift, and go to state 56
    "<="  shift, and go to state 57
    "=="  shift, and go to state 58
    "##"  shift, and go to state 59
    '+'   shift, and go to state 60
    '-'   shift, and go to state 61
    '*'   shift, and go to state 62
    '/'   shift, and go to state 63
    '>'   shift, and go to state 64
    '<'   shift, and go to state 65

    CondOp  go to state 66


State 44

   46 Expr: Oprnd .

    $default  reduce using rule 46 (Expr)


State 45

   29 Stmt: "while" Cond . CodeBlock

    '{'  shift, and go to state 16

    CodeBlock  go to state 67


State 46

   24 Stmt: "put" '(' . Expr ')'
   25     | "put" '(' . String ')'

    IDENT_TOK    shift, and go to state 1
    "string"     shift, and go to state 68
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id      go to state 41
    String  go to state 69
    Expr    go to state 70
    Oprnd   go to state 44


State 47

   30 Stmt: Id '(' . ')'

    ')'  shift, and go to state 71


State 48

   38 AssignStmt: Id '=' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 72
    Oprnd  go to state 44


State 49

   21 CodeBlock: '{' StmtSeq '}' .

    $default  reduce using rule 21 (CodeBlock)


State 50

   22 StmtSeq: Stmt StmtSeq .

    $default  reduce using rule 22 (StmtSeq)


State 51

   20 FuncDecl: '(' ')' "->" . BaseType

    "int"   shift, and go to state 19
    "chr"   shift, and go to state 20
    "bool"  shift, and go to state 21
    "void"  shift, and go to state 22

    BaseType  go to state 73


State 52

   45 Expr: "get" '(' . "int" ')'

    "int"  shift, and go to state 74


State 53

   39 Expr: Expr . '+' Expr
   40     | Expr . '-' Expr
   41     | Expr . '*' Expr
   42     | Expr . '/' Expr
   44     | '-' Expr .

    $default  reduce using rule 44 (Expr)


State 54

   39 Expr: Expr . '+' Expr
   40     | Expr . '-' Expr
   41     | Expr . '*' Expr
   42     | Expr . '/' Expr
   43     | '(' Expr . ')'

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63
    ')'  shift, and go to state 75


State 55

   27 Stmt: "if" Cond CodeBlock .
   28     | "if" Cond CodeBlock . "else" CodeBlock

    "else"  shift, and go to state 76

    $default  reduce using rule 27 (Stmt)


State 56

   34 CondOp: ">=" .

    $default  reduce using rule 34 (CondOp)


State 57

   35 CondOp: "<=" .

    $default  reduce using rule 35 (CondOp)


State 58

   36 CondOp: "==" .

    $default  reduce using rule 36 (CondOp)


State 59

   37 CondOp: "##" .

    $default  reduce using rule 37 (CondOp)


State 60

   39 Expr: Expr '+' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 77
    Oprnd  go to state 44


State 61

   40 Expr: Expr '-' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 78
    Oprnd  go to state 44


State 62

   41 Expr: Expr '*' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 79
    Oprnd  go to state 44


State 63

   42 Expr: Expr '/' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 80
    Oprnd  go to state 44


State 64

   32 CondOp: '>' .

    $default  reduce using rule 32 (CondOp)


State 65

   33 CondOp: '<' .

    $default  reduce using rule 33 (CondOp)


State 66

   31 Cond: Expr CondOp . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 35
    CHRLIT_TOK   shift, and go to state 36
    BOOLLIT_TOK  shift, and go to state 37
    "get"        shift, and go to state 38
    '-'          shift, and go to state 39
    '('          shift, and go to state 40

    Id     go to state 41
    Expr   go to state 81
    Oprnd  go to state 44


State 67

   29 Stmt: "while" Cond CodeBlock .

    $default  reduce using rule 29 (Stmt)


State 68

   12 String: "string" .

    $default  reduce using rule 12 (String)


State 69

   25 Stmt: "put" '(' String . ')'

    ')'  shift, and go to state 82


State 70

   24 Stmt: "put" '(' Expr . ')'
   39 Expr: Expr . '+' Expr
   40     | Expr . '-' Expr
   41     | Expr . '*' Expr
   42     | Expr . '/' Expr

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63
    ')'  shift, and go to state 83


State 71

   30 Stmt: Id '(' ')' .

    $default  reduce using rule 30 (Stmt)


State 72

   38 AssignStmt: Id '=' Expr .
   39 Expr: Expr . '+' Expr
   40     | Expr . '-' Expr
   41     | Expr . '*' Expr
   42     | Expr . '/' Expr

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63

    $default  reduce using rule 38 (AssignStmt)


State 73

   20 FuncDecl: '(' ')' "->" BaseType .

    $default  reduce using rule 20 (FuncDecl)


State 74

   45 Expr: "get" '(' "int" . ')'

    ')'  shift, and go to state 84


State 75

   43 Expr: '(' Expr ')' .

    $default  reduce using rule 43 (Expr)


State 76

   28 Stmt: "if" Cond CodeBlock "else" . CodeBlock

    '{'  shift, and go to state 16

    CodeBlock  go to state 85


State 77

   39 Expr: Expr . '+' Expr
   39     | Expr '+' Expr .
   40     | Expr . '-' Expr
   41     | Expr . '*' Expr
   42     | Expr . '/' Expr

    '*'  shift, and go to state 62
    '/'  shift, and go to state 63

    $default  reduce using rule 39 (Expr)


State 78

   39 Expr: Expr . '+' Expr
   40     | Expr . '-' Expr
   40     | Expr '-' Expr .
   41     | Expr . '*' Expr
   42     | Expr . '/' Expr

    '*'  shift, and go to state 62
    '/'  shift, and go to state 63

    $default  reduce using rule 40 (Expr)


State 79

   39 Expr: Expr . '+' Expr
   40     | Expr . '-' Expr
   41     | Expr . '*' Expr
   41     | Expr '*' Expr .
   42     | Expr . '/' Expr

    $default  reduce using rule 41 (Expr)


State 80

   39 Expr: Expr . '+' Expr
   40     | Expr . '-' Expr
   41     | Expr . '*' Expr
   42     | Expr . '/' Expr
   42     | Expr '/' Expr .

    $default  reduce using rule 42 (Expr)


State 81

   31 Cond: Expr CondOp Expr .
   39 Expr: Expr . '+' Expr
   40     | Expr . '-' Expr
   41     | Expr . '*' Expr
   42     | Expr . '/' Expr

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63

    $default  reduce using rule 31 (Cond)


State 82

   25 Stmt: "put" '(' String ')' .

    $default  reduce using rule 25 (Stmt)


State 83

   24 Stmt: "put" '(' Expr ')' .

    $default  reduce using rule 24 (Stmt)


State 84

   45 Expr: "get" '(' "int" ')' .

    $default  reduce using rule 45 (Expr)


State 85

   28 Stmt: "if" Cond CodeBlock "else" CodeBlock .

    $default  reduce using rule 28 (Stmt)
