Nonterminals useless in grammar

   AssignStmt


Rules useless in parser due to conflicts

   23 Stmt: %empty


State 16 conflicts: 1 reduce/reduce
State 28 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Module $end

    1 Module: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: IdList ':' BaseType
    5     | IdList "::" Literal
    6     | IdList ':' FuncDecl
    7     | IdList "::" CodeBlock

    8 IdList: IdItem ',' IdList
    9       | IdItem

   10 IdItem: Id

   11 Id: IDENT_TOK

   12 BaseType: "int"
   13         | "chr"
   14         | "bool"
   15         | "void"

   16 Literal: INTLIT_TOK
   17        | CHRLIT_TOK
   18        | BOOLLIT_TOK

   19 FuncDecl: '(' ')' "->" BaseType

   20 CodeBlock: '{' StmtSeq '}'

   21 StmtSeq: Stmt StmtSeq
   22        | %empty

   23 Stmt: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19
')' (41) 19
',' (44) 8
':' (58) 4 6
'{' (123) 20
'}' (125) 20
error (256)
IDENT_TOK (258) 11
"int" (259) 12
"chr" (260) 13
"bool" (261) 14
"void" (262) 15
INTLIT_TOK (263) 16
CHRLIT_TOK (264) 17
BOOLLIT_TOK (265) 18
"->" (266) 19
"::" (267) 5 7


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
Module (20)
    on left: 1, on right: 0
DeclList (21)
    on left: 2 3, on right: 1 2
Decl (22)
    on left: 4 5 6 7, on right: 2 3
IdList (23)
    on left: 8 9, on right: 4 5 6 7 8
IdItem (24)
    on left: 10, on right: 8 9
Id (25)
    on left: 11, on right: 10
BaseType (26)
    on left: 12 13 14 15, on right: 4 19
Literal (27)
    on left: 16 17 18, on right: 5
FuncDecl (28)
    on left: 19, on right: 6
CodeBlock (29)
    on left: 20, on right: 7
StmtSeq (30)
    on left: 21 22, on right: 20 21
Stmt (31)
    on left: 23, on right: 21


State 0

    0 $accept: . Module $end

    IDENT_TOK  shift, and go to state 1

    Module    go to state 2
    DeclList  go to state 3
    Decl      go to state 4
    IdList    go to state 5
    IdItem    go to state 6
    Id        go to state 7


State 1

   11 Id: IDENT_TOK .

    $default  reduce using rule 11 (Id)


State 2

    0 $accept: Module . $end

    $end  shift, and go to state 8


State 3

    1 Module: DeclList .

    $default  reduce using rule 1 (Module)


State 4

    2 DeclList: Decl . DeclList
    3         | Decl .

    IDENT_TOK  shift, and go to state 1

    $default  reduce using rule 3 (DeclList)

    DeclList  go to state 9
    Decl      go to state 4
    IdList    go to state 5
    IdItem    go to state 6
    Id        go to state 7


State 5

    4 Decl: IdList . ':' BaseType
    5     | IdList . "::" Literal
    6     | IdList . ':' FuncDecl
    7     | IdList . "::" CodeBlock

    "::"  shift, and go to state 10
    ':'   shift, and go to state 11


State 6

    8 IdList: IdItem . ',' IdList
    9       | IdItem .

    ','  shift, and go to state 12

    $default  reduce using rule 9 (IdList)


State 7

   10 IdItem: Id .

    $default  reduce using rule 10 (IdItem)


State 8

    0 $accept: Module $end .

    $default  accept


State 9

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 10

    5 Decl: IdList "::" . Literal
    7     | IdList "::" . CodeBlock

    INTLIT_TOK   shift, and go to state 13
    CHRLIT_TOK   shift, and go to state 14
    BOOLLIT_TOK  shift, and go to state 15
    '{'          shift, and go to state 16

    Literal    go to state 17
    CodeBlock  go to state 18


State 11

    4 Decl: IdList ':' . BaseType
    6     | IdList ':' . FuncDecl

    "int"   shift, and go to state 19
    "chr"   shift, and go to state 20
    "bool"  shift, and go to state 21
    "void"  shift, and go to state 22
    '('     shift, and go to state 23

    BaseType  go to state 24
    FuncDecl  go to state 25


State 12

    8 IdList: IdItem ',' . IdList

    IDENT_TOK  shift, and go to state 1

    IdList  go to state 26
    IdItem  go to state 6
    Id      go to state 7


State 13

   16 Literal: INTLIT_TOK .

    $default  reduce using rule 16 (Literal)


State 14

   17 Literal: CHRLIT_TOK .

    $default  reduce using rule 17 (Literal)


State 15

   18 Literal: BOOLLIT_TOK .

    $default  reduce using rule 18 (Literal)


State 16

   20 CodeBlock: '{' . StmtSeq '}'

    '}'       reduce using rule 22 (StmtSeq)
    '}'       [reduce using rule 23 (Stmt)]
    $default  reduce using rule 22 (StmtSeq)

    StmtSeq  go to state 27
    Stmt     go to state 28


State 17

    5 Decl: IdList "::" Literal .

    $default  reduce using rule 5 (Decl)


State 18

    7 Decl: IdList "::" CodeBlock .

    $default  reduce using rule 7 (Decl)


State 19

   12 BaseType: "int" .

    $default  reduce using rule 12 (BaseType)


State 20

   13 BaseType: "chr" .

    $default  reduce using rule 13 (BaseType)


State 21

   14 BaseType: "bool" .

    $default  reduce using rule 14 (BaseType)


State 22

   15 BaseType: "void" .

    $default  reduce using rule 15 (BaseType)


State 23

   19 FuncDecl: '(' . ')' "->" BaseType

    ')'  shift, and go to state 29


State 24

    4 Decl: IdList ':' BaseType .

    $default  reduce using rule 4 (Decl)


State 25

    6 Decl: IdList ':' FuncDecl .

    $default  reduce using rule 6 (Decl)


State 26

    8 IdList: IdItem ',' IdList .

    $default  reduce using rule 8 (IdList)


State 27

   20 CodeBlock: '{' StmtSeq . '}'

    '}'  shift, and go to state 30


State 28

   21 StmtSeq: Stmt . StmtSeq

    '}'       reduce using rule 22 (StmtSeq)
    '}'       [reduce using rule 23 (Stmt)]
    $default  reduce using rule 22 (StmtSeq)

    StmtSeq  go to state 31
    Stmt     go to state 28


State 29

   19 FuncDecl: '(' ')' . "->" BaseType

    "->"  shift, and go to state 32


State 30

   20 CodeBlock: '{' StmtSeq '}' .

    $default  reduce using rule 20 (CodeBlock)


State 31

   21 StmtSeq: Stmt StmtSeq .

    $default  reduce using rule 21 (StmtSeq)


State 32

   19 FuncDecl: '(' ')' "->" . BaseType

    "int"   shift, and go to state 19
    "chr"   shift, and go to state 20
    "bool"  shift, and go to state 21
    "void"  shift, and go to state 22

    BaseType  go to state 33


State 33

   19 FuncDecl: '(' ')' "->" BaseType .

    $default  reduce using rule 19 (FuncDecl)
